{
  "name": "be",
  "version": "0.5.0",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "lint:check": "eslint \"{src,apps,libs,test}/**/*.ts\"",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:coverage": "jest --coverage --passWithNoTests",
    "test:coverage:check": "jest --coverage --passWithNoTests --coverageThreshold='{}' --silent",
    "test:coverage:open": "jest --coverage && open coverage/lcov-report/index.html",
    "test:coverage:ci": "jest --coverage --watchAll=false --ci --reporters=default --reporters=jest-junit",
    "test:tdd": "jest --watch --coverage --verbose",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:integration:e2e": "jest --config ./test/jest-integration.json",
    "test:integration:e2e:watch": "jest --config ./test/jest-integration.json --watch",
    "test:integration:e2e:cov": "jest --config ./test/jest-integration.json --coverage",
    "prepare": "husky",
    "pre-commit": "lint-staged",
    "pre-push": "npm run test && npm run build",
    "release": "standard-version",
    "release:minor": "standard-version --release-as minor",
    "release:major": "standard-version --release-as major",
    "release:patch": "standard-version --release-as patch",
    "release:dry": "standard-version --dry-run",
    "release:notes": "conventional-changelog -p angular -r 2",
    "release:generate": "./scripts/generate-release-notes.sh",
    "release:full": "npm run test:coverage && npm run analyze && npm run release && npm run release:generate",
    "release:analyze": "node scripts/release-analyzer.js",
    "release:analyze:json": "node scripts/release-analyzer.js --json",
    "release:analyze:save": "node scripts/release-analyzer.js --save",
    "release:version": "node scripts/version-calculator.js",
    "release:version:minor": "node scripts/version-calculator.js minor --dry-run",
    "release:version:patch": "node scripts/version-calculator.js patch --dry-run",
    "release:version:major": "node scripts/version-calculator.js major --dry-run",
    "release:version:prerelease": "node scripts/version-calculator.js prerelease --dry-run",
    "release:auto": "node scripts/auto-release.js",
    "release:auto:dry-run": "node scripts/auto-release.js --dry-run",
    "release:auto:force": "node scripts/auto-release.js --force",
    "release:dry-run": "node scripts/auto-release.js --dry-run",
    "release:manual": "node scripts/auto-release.js --force",
    "analyze": "npm run analyze:cognitive && npm run analyze:complexity && npm run analyze:functions",
    "analyze:cognitive": "eslint \"src/**/*.ts\" --format=json | jq -r '.[] | select(.messages[]?.ruleId == \"sonarjs/cognitive-complexity\") | \"📁 \" + .filePath + \"\\n\" + (.messages[] | select(.ruleId == \"sonarjs/cognitive-complexity\") | \"  🧠 Line \" + (.line | tostring) + \": \" + .message)' 2>/dev/null || echo '✅ No cognitive complexity issues found'",
    "analyze:complexity": "eslint \"src/**/*.ts\" --format=json | jq -r '.[] | select(.messages[]?.ruleId == \"complexity\") | \"📁 \" + .filePath + \"\\n\" + (.messages[] | select(.ruleId == \"complexity\") | \"  🔄 Line \" + (.line | tostring) + \": \" + .message)' 2>/dev/null || echo '✅ No cyclomatic complexity issues found'",
    "analyze:functions": "eslint \"src/**/*.ts\" --format=json | jq -r '.[] | select(.messages[]?.ruleId == \"max-lines-per-function\") | \"📁 \" + .filePath + \"\\n\" + (.messages[] | select(.ruleId == \"max-lines-per-function\") | \"  📏 Line \" + (.line | tostring) + \": \" + .message)' 2>/dev/null || echo '✅ No long function issues found'",
    "analyze:security": "eslint \"src/**/*.ts\" --format=json | jq -r '.[] | select(.messages[]?.ruleId | startswith(\"security/\")) | \"📁 \" + .filePath + \"\\n\" + (.messages[] | select(.ruleId | startswith(\"security/\")) | \"  🛡️ Line \" + (.line | tostring) + \": \" + .message)' 2>/dev/null || echo '✅ No security issues found'",
    "analyze:summary": "echo '🧠 COGNITIVE COMPLEXITY SUMMARY:' && npm run analyze:cognitive",
    "analyze:report": "mkdir -p reports && eslint \"src/**/*.ts\" --format=json -o reports/eslint-analysis.json && echo '📄 Full report saved to reports/eslint-analysis.json'",
    "analyze:simple": "eslint \"src/**/*.ts\" | grep -E '(cognitive-complexity|complexity)' || echo '✅ No complexity issues found'",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\" \"*.json\" \"*.md\" \".github/**/*.yml\"",
    "format:check": "prettier --check \"src/**/*.ts\" \"test/**/*.ts\" \"*.json\" \"*.md\" \".github/**/*.yml\"",
    "format:fix": "npm run format && npm run lint:fix",
    "lint:fix": "eslint \"src/**/*.ts\" \"test/**/*.ts\" --fix",
    "quality": "npm run format:check && npm run lint && npm run analyze",
    "quality:fix": "npm run format:fix && npm run analyze"
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "@prisma/client": "^6.16.1",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "helmet": "^8.1.0",
    "joi": "^17.13.3",
    "moment-timezone": "^0.6.0",
    "pg": "^8.16.3",
    "prisma": "^6.16.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.26",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/js": "^9.30.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/release-notes-generator": "^14.1.0",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@testcontainers/postgresql": "^11.5.1",
    "@types/babel__template": "^7.4.4",
    "@types/bcrypt": "^6.0.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "conventional-changelog": "^7.1.1",
    "conventional-commits-parser": "^6.2.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-sonarjs": "^0.25.1",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jscpd": "^3.5.10",
    "lint-staged": "^16.1.2",
    "prettier": "^3.4.2",
    "semantic-release": "^24.2.8",
    "source-map-support": "^0.5.21",
    "standard-version": "^9.5.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.35.1"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=20.8.0",
    "npm": ">=10.0.0"
  }
}
