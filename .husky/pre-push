#!/bin/sh

# Previeni loop infinito - Skip se chiamato dal release system
if [ "$SKIP_PRE_PUSH_HOOK" = "true" ]; then
    echo "🔄 Skipping pre-push hook (called from release system)"
    exit 0
fi

echo "🚀 Running pre-push checks for production readiness..."

# Step 1: Full test suite with coverage enforcement  
echo "🧪 Running full test suite with coverage validation..."
npm run test:coverage:check

# Step 2: Build verification
echo "🏗️ Verifying build..."
npm run build

echo "✅ Pre-push checks passed! Ready to push to production."

# Step 3: Automated Release Management
echo ""
echo "🔍 Checking for automated release needs..."

# Verifica se siamo sul branch main/master
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$CURRENT_BRANCH" != "main" ] && [ "$CURRENT_BRANCH" != "master" ]; then
    echo "📝 Skipping release check - not on main/master branch (current: $CURRENT_BRANCH)"
    exit 0
fi

# Controllo rapido se è un commit semantico che giustifica auto-release
LAST_COMMIT_MSG=$(git log -1 --pretty=format:"%s")
if echo "$LAST_COMMIT_MSG" | grep -qE "^(feat|fix|BREAKING CHANGE)"; then
    echo "🚀 Semantic commit detected: $LAST_COMMIT_MSG"
    
    # Verifica che gli script siano disponibili
    if [ -f "scripts/auto-release.js" ] && [ -f "scripts/release-analyzer.js" ]; then
        echo "🔄 Triggering automated release..."
        
        # Esegue il rilascio automatico
        node scripts/auto-release.js --type="auto" 2>/dev/null
        AUTO_RELEASE_EXIT_CODE=$?
        
        if [ $AUTO_RELEASE_EXIT_CODE -eq 0 ]; then
            echo "🎉 Automated release completed successfully!"
        else
            echo "⚠️  Automated release failed, proceeding with push only"
        fi
    else
        echo "⚠️  Release scripts not found, skipping automated release"
    fi
else
    echo "📝 Non-semantic commit - proceeding with push only"
fi

echo "🚀 Pre-push hook completed successfully"
